# -*- coding: utf-8 -*-
"""lab8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tIbnCiw2mRhsrXUhUdEi5dp-Mky9B8mO
"""

import cv2
import time
import numpy as np
from google.colab.patches import cv2_imshow

im = cv2.imread('variant-1.jpg')

gray_im = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY)
cv2_imshow(gray_im)
cv2.waitKey(0)
cv2.imwrite('gray_im.jpg', gray_im)

def video_processing():
    cap = cv2.VideoCapture("sample.mp4")
    down_points = (640, 480)
    i = 0
    while True:
        ret, frame = cap.read()
        if not ret:
            break

        frame_gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        template = cv2.imread('ref-point.jpg', cv2.IMREAD_GRAYSCALE)
        assert template is not None, "file could not be read, check with os.path.exists()"
        w, h = template.shape[::-1]
        res = cv2.matchTemplate(frame_gray,template,cv2.TM_CCOEFF_NORMED)
        threshold = 0.8
        loc = np.where(res >= threshold)

        for pt in zip(*loc[::-1]):
            x,y,w,h = cv2.boundingRect(pt)
            cv2.rectangle(img,(x,y),(x+w,y+h),(0,255,),1)
            print("Координаты x:",x,"y",y)

        cv2.imwrite('res.png',frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

        time.sleep(0.1)
        i += 1

    cap.release()

if __name__ == '__main__':
    #image_processing()
    video_processing()

cv2.waitKey(0)
cv2.destroyAllWindows()

